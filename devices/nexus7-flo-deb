#####################################################
# Create Nexus 7 (2013) FLO/DEB Stock Kernel (4.4+)
#####################################################
f_deb_stock_kernel(){

echo "Downloading Android Toolchian"
if [[ $LOCALGIT == 1 ]]; then
	echo "Copying toolchain to rootfs"
        cp -rf ${basepwd}/arm-eabi-4.7 ${basedir}/toolchain
else
	git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7 ${basedir}/toolchain
fi

echo "Setting export paths"
# Set path for Kernel building
export ARCH=arm
export SUBARCH=arm
export CROSS_COMPILE=${basedir}/toolchain/bin/arm-eabi-

if [[ $FROZENKERNEL == 1 ]]; then
	echo "Using frozen kernel"
 	cp -rf ${basepwd}/flash/ ${basedir}/flashkernel
	rm -rf ${basedir}/flashkernel/data ${basedir}/flashkernel/sdcard ${basedir}/flashkernel/system/app ${basedir}/flashkernel/META-INF/com/google/android/updater-script
  	cp -rf ${basepwd}/devices/frozen_kernels/4.4.4/n7-flodeb/* ${basedir}/flashkernel/
  	if [ -f "${basedir}/flash/META-INF/com/google/android/updater-script" ]; then
	  if grep -Fxq "#KERNEL_SCRIPT_START" "${basedir}/flash/META-INF/com/google/android/updater-script"
	  then
	    echo "Kernel already added to main updater-script"
	  else
	    echo "Adding Kernel install to updater-script in main update.zip"
	    cat ${basedir}/flashkernel/META-INF/com/google/android/updater-script >> ${basedir}/flash/META-INF/com/google/android/updater-script
	    cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
	  fi
	fi
	if [ -d "${basedir}/flash" ]; then
		echo "Found flash folder, copying kernel"
		cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
	fi
else

f_kernel_build_init

echo "Downloading Kernel"
cd ${basedir}
if [[ $LOCALGIT == 1 ]]; then
  echo "Copying kernel to rootfs"
  cp -rf ${basepwd}/flodeb ${basedir}/kernel
else
  git clone https://github.com/binkybear/kernel_msm.git -b android-msm-flo-3.4-kitkat-mr2 ${basedir}/kernel
fi

cd ${basedir}/kernel

make clean
sleep 10
make kali_defconfig

# Attach kernel builder to updater-script
echo "#KERNEL_SCRIPT_START" >> ${basedir}/flashkernel/META-INF/com/google/android/updater-script
cat << EOF > ${basedir}/flashkernel/META-INF/com/google/android/updater-script

ui_print("* Starting Kernel install for Nexus 7 (2013)*");
ui_print("* Mounting System...                        *");
mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
package_extract_dir("system", "/system");
set_perm_recursive(0, 0, 0644, 0644, "/system/lib/modules");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
unmount("/system");
package_extract_dir("kernel", "/tmp");
set_perm(0, 0, 0777, "/tmp/edit_ramdisk.sh");
set_perm(0, 0, 0777, "/tmp/abootimg");
set_perm(0, 0, 0777, "/tmp/busybox");
set_perm(0, 0, 0755, "/tmp/cleansystem.sh");
ui_print("* Cleaning /system/app...                   *");
run_program("/tmp/cleansystem.sh");
run_program("/tmp/busybox", "dd", "if=/dev/block/mmcblk0p14", "of=/tmp/boot.img");
run_program("/tmp/abootimg", "-x", "/tmp/boot.img", "/tmp/bootimg.cfg", "/tmp/zImage", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/edit_ramdisk.sh");
run_program("/tmp/abootimg", "-u", "/tmp/boot.img", "-k", "/tmp/kernel", "-r", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/busybox", "dd", "if=/tmp/boot.img", "of=/dev/block/mmcblk0p14");

ui_print("* Kernel installation completed...          *");
EOF

# Start kernel build
f_kernel_build
fi
}

#####################################################
# Create Nexus 7 (2013) FLO/DEB CyanogenMod Kernel (4.4+)
#####################################################
f_deb_cyanogen_kernel(){
if [[ $FROZENKERNEL == 1 ]]; then
echo "Using frozen kernel"
cp -rf ${basepwd}/flash/ ${basedir}/flashkernel
rm -rf ${basedir}/flashkernel/data ${basedir}/flashkernel/sdcard ${basedir}/flashkernel/system/app ${basedir}/flashkernel/META-INF/com/google/android/updater-script
cp -rf ${basepwd}/devices/frozen_kernels/4.4.4/n7-flodeb-CM/* ${basedir}/flashkernel/
if [ -f "${basedir}/flash/META-INF/com/google/android/updater-script" ]; then
if grep -Fxq "#KERNEL_SCRIPT_START" "${basedir}/flash/META-INF/com/google/android/updater-script"
then
echo "Kernel already added to main updater-script"
else
echo "Adding Kernel install to updater-script in main update.zip"
cat ${basedir}/flashkernel/META-INF/com/google/android/updater-script >> ${basedir}/flash/META-INF/com/google/android/updater-script
cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
fi
fi
if [ -d "${basedir}/flash" ]; then
echo "Found flash folder, copying kernel"
cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
fi
else
f_kernel_build_init
echo "Downloading Kernel"
cd ${basedir}
if [[ $LOCALGIT == 1 ]]; then
echo "Copying kernel to rootfs"
cp -rf ${basepwd}/cyanflodeb ${basedir}/kernel
else
git clone https://github.com/binkybear/flo.git -b Cyanogenmod ${basedir}/kernel
fi
cd ${basedir}/kernel
make clean
sleep 10
make kali_defconfig
# Attach kernel builder to updater-script
echo "#KERNEL_SCRIPT_START" >> ${basedir}/flashkernel/META-INF/com/google/android/updater-script
cat << EOF > ${basedir}/flashkernel/META-INF/com/google/android/updater-script
ui_print("* Starting Kernel install for Nexus 7 (2013)*");
ui_print("* Mounting System... *");
mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
package_extract_dir("system", "/system");
symlink("/system/xbin/lighttpd-static", "/system/bin/lighttpd");
symlink("/system/xbin/php-cgi", "/system/bin/php");
set_perm_recursive(0, 0, 0644, 0644, "/system/lib/modules");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm_recursive(0, 2000, 0755, 0777, "/system/var/www");
set_perm_recursive(0, 2000, 0755, 0777, "/system/var/log");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
unmount("/system");
package_extract_dir("kernel", "/tmp");
set_perm(0, 0, 0777, "/tmp/edit_ramdisk.sh");
set_perm(0, 0, 0777, "/tmp/abootimg");
set_perm(0, 0, 0777, "/tmp/busybox");
set_perm(0, 0, 0755, "/tmp/cleansystem.sh");
ui_print("* Cleaning /system/app... *");
run_program("/tmp/cleansystem.sh");
run_program("/tmp/busybox", "dd", "if=/dev/block/mmcblk0p14", "of=/tmp/boot.img");
run_program("/tmp/abootimg", "-x", "/tmp/boot.img", "/tmp/bootimg.cfg", "/tmp/zImage", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/edit_ramdisk.sh");
run_program("/tmp/abootimg", "-u", "/tmp/boot.img", "-k", "/tmp/kernel", "-r", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/busybox", "dd", "if=/tmp/boot.img", "of=/dev/block/mmcblk0p14");
ui_print("* Kernel installation completed... *");
EOF
# Start kernel build
f_kernel_build
fi
}

#####################################################
# Create Nexus 7 (2013) FLO/DEB Kernel (5)
#####################################################

f_deb_stock_kernel5(){

echo "Downloading Android Toolchian"
if [[ $LOCALGIT == 1 ]]; then
	echo "Copying toolchain to rootfs"
        cp -rf ${basepwd}/arm-eabi-4.7 ${basedir}/toolchain
else
	git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7 ${basedir}/toolchain
fi

echo "Setting export paths"
# Set path for Kernel building
export ARCH=arm
export SUBARCH=arm
export CROSS_COMPILE=${basedir}/toolchain/bin/arm-eabi-

if [[ $FROZENKERNEL == 1 ]]; then
	echo "Using frozen kernel"
 	cp -rf ${basepwd}/flash/ ${basedir}/flashkernel
	rm -rf ${basedir}/flashkernel/data ${basedir}/flashkernel/sdcard ${basedir}/flashkernel/system/app ${basedir}/flashkernel/META-INF/com/google/android/updater-script
  	cp -rf ${basepwd}/devices/frozen_kernels/4.4.4/n7-flodeb/* ${basedir}/flashkernel/
  	if [ -f "${basedir}/flash/META-INF/com/google/android/updater-script" ]; then
	  if grep -Fxq "#KERNEL_SCRIPT_START" "${basedir}/flash/META-INF/com/google/android/updater-script"
	  then
	    echo "Kernel already added to main updater-script"
	  else
	    echo "Adding Kernel install to updater-script in main update.zip"
	    cat ${basedir}/flashkernel/META-INF/com/google/android/updater-script >> ${basedir}/flash/META-INF/com/google/android/updater-script
	    cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
	  fi
	fi
	if [ -d "${basedir}/flash" ]; then
		echo "Found flash folder, copying kernel"
		cp -f ${basedir}/flashkernel/kernel/kernel ${basedir}/flash/kernel/kernel
	fi
else

f_kernel_build_init

echo "Downloading Kernel"
cd ${basedir}
if [[ $LOCALGIT == 1 ]]; then
  echo "Copying kernel to rootfs"
  cp -rf ${basepwd}/nexus7_2013-5 ${basedir}/kernel
else
	git clone https://github.com/binkybear/kernel_msm.git -b android-msm-flo-3.4-lollipop-release ${basedir}/kernel
fi

cd ${basedir}/kernel

chmod +x scripts/*

make clean
sleep 10
make kali_defconfig

# Attach kernel builder to updater-script
echo "#KERNEL_SCRIPT_START" >> ${basedir}/flashkernel/META-INF/com/google/android/updater-script
cat << EOF > ${basedir}/flashkernel/META-INF/com/google/android/updater-script

ui_print("* Starting Kernel install for Nexus 7 (2013)*");
ui_print("* Mounting System...                        *");
mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
package_extract_dir("system", "/system");
set_perm_recursive(0, 0, 0644, 0644, "/system/lib/modules");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
unmount("/system");
package_extract_dir("kernel", "/tmp");
set_perm(0, 0, 0777, "/tmp/edit_ramdisk5.sh");
set_perm(0, 0, 0777, "/tmp/abootimg");
set_perm(0, 0, 0777, "/tmp/busybox");
set_perm(0, 0, 0755, "/tmp/cleansystem.sh");

ui_print("* Cleaning /system/app...                   *");
run_program("/tmp/cleansystem.sh");
run_program("/tmp/busybox", "dd", "if=/dev/block/mmcblk0p14", "of=/tmp/boot.img");
run_program("/tmp/abootimg", "-x", "/tmp/boot.img", "/tmp/bootimg.cfg", "/tmp/zImage", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/edit_ramdisk5.sh");
run_program("/tmp/abootimg", "-u", "/tmp/boot.img", "-k", "/tmp/kernel", "-r", "/tmp/boot.img-ramdisk.gz");
run_program("/tmp/busybox", "dd", "if=/tmp/boot.img", "of=/dev/block/mmcblk0p14");

ui_print("* Kernel installation completed...          *");
EOF

# Start kernel build
f_kernel_build
fi
}
